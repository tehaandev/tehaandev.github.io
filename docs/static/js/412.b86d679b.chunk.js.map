{"version":3,"file":"static/js/412.b86d679b.chunk.js","mappings":"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","sources":["components/Contact/Contact.jsx","services/api.service.js"],"sourcesContent":["import { Formik, Form, ErrorMessage, Field } from \"formik\";\r\nimport { useEffect } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { publishSns } from \"../../services/api.service.js\";\r\nimport Button from \"../Button/Button.jsx\";\r\nimport \"./Contact.css\";\r\n\r\nconst TITLE = \"TP | Let's get in touch\";\r\n\r\nfunction Contact() {\r\n  useEffect(() => {\r\n    document.title = TITLE;\r\n  });\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    organization: \"\",\r\n    message: \"\",\r\n  };\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required(\"Name is required.\"),\r\n    email: Yup.string()\r\n      .required(\"Email is required.\")\r\n      .email(\"Email is invalid.\"),\r\n    phone: Yup.string(),\r\n    organization: Yup.string(),\r\n    message: Yup.string().required(\"Message is required.\"),\r\n  });\r\n\r\n  return (\r\n    <main className=\"container contact-form-container\">\r\n      <div className=\"sub-container\">\r\n        <h1>\r\n          Let's <span className=\"text-tertiary\">talk!</span>\r\n        </h1>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={async (values) => {\r\n            const body = `Date: ${new Date()} \\nName: ${values.name} \\nEmail: ${values.email} \\nPhone: ${values.phone} \\nOrganization: ${values.organization} \\nMessage: ${values.message}`;\r\n            const response = await publishSns(\r\n              \"Porfolio: New form submission.\",\r\n              body,\r\n            );\r\n            if (response == 201) {\r\n              console.log(response);\r\n              document.getElementById(\"submission-status\").innerHTML =\r\n                \"Submission Successful. Thank you for reaching out!\";\r\n            } else {\r\n              console.log(response);\r\n              document.getElementById(\"submission-status\").innerHTML =\r\n                `Error ${response}! Please try again.`;\r\n            }\r\n          }}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {() => (\r\n            <Form>\r\n              <div className=\"field\">\r\n                <Field name=\"name\" placeholder=\"Name\" />\r\n                <div className=\"error-message\">\r\n                  <ErrorMessage name=\"name\" component=\"span\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <Field name=\"email\" placeholder=\"Email\" />\r\n                <div className=\"error-message\">\r\n                  <ErrorMessage name=\"email\" component=\"span\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <Field name=\"phone\" placeholder=\"Phone\" />\r\n                <div className=\"error-message\">\r\n                  <ErrorMessage name=\"phone\" component=\"span\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <Field name=\"organization\" placeholder=\"Organization\" />\r\n                <div className=\"error-message\">\r\n                  <ErrorMessage name=\"organization\" component=\"span\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <Field\r\n                  name=\"message\"\r\n                  component=\"textarea\"\r\n                  placeholder=\"Message\"\r\n                />\r\n                <div className=\"error-message\">\r\n                  <ErrorMessage name=\"message\" component=\"span\" />\r\n                </div>\r\n              </div>\r\n              <Button type=\"submit\" text=\"Submit\" />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <p id=\"submission-status\"></p>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\nexport default Contact;\r\n","import axios from \"axios\";\r\n\r\nexport const publishSns = async (subject, message) => {\r\n  const body = { subject: subject, message: message };\r\n  const apiURL = \"https://tehaandev-github-io-backend.vercel.app/sns\";\r\n  // const apiURL = \"http://localhost:3000/sns\";\r\n\r\n  return await axios\r\n    .post(apiURL, body)\r\n    .then(function (response) {\r\n      return response.status;\r\n    })\r\n    .catch(function (err) {\r\n      return err.response.status;\r\n    });\r\n};\r\n"],"names":["useEffect","document","title","validationSchema","Yup","name","required","email","phone","organization","message","_jsx","className","children","_jsxs","Formik","initialValues","onSubmit","async","body","concat","Date","values","response","subject","axios","post","then","status","catch","err","publishSns","console","log","getElementById","innerHTML","Form","Field","placeholder","ErrorMessage","component","Button","type","text","id"],"sourceRoot":""}